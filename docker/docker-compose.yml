version: '3.7'

services:
  app:
    image: ${COMPOSE_PROJECT_NAME}_app:${DOCKER_BUILD_MODE}
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/app/Dockerfile
      args:
        - HTTP_PROXY=${APP_HTTP_PROXY}
        - HTTPS_PROXY=${APP_HTTPS_PROXY}
        - NO_PROXY=${APP_NO_PROXY}
        - BUILD_MODE=${DOCKER_BUILD_MODE}
        - TIMEZONE=${TIMEZONE}
    restart: always
    environment:
      - CONTAINER_ROLE=app
    volumes:
      - ${DOCKER_VOLUME_CODES_ROOT_DIR}:/var/www/html
    depends_on:
      - redis
      - mysql
    ports:
      - ${WEB_HTTP_PUBLISH_PORT}:80
      - ${WEB_HTTPS_PUBLISH_PORT}:443
    env_file:
      - .envs/app.env
      - .envs/web.env
      - .envs/php-ini.env
    networks:
      - laravel

  # database service
  mysql:
    image: mysql:8.0
    container_name: lara_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_USER: sham
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel
    ports:
      - "3306:3306"

  # redis service
  redis:
    image: redis:alpine
    container_name: lara_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  adminer:
    image: adminer:4.8.1
    container_name: lara_adminer
    restart: unless-stopped
    environment:
      - ADMINER_DEFAULT_SERVER=mysql
      - ADMINER_PLUGINS=version-noverify
    networks:
      - laravel
    ports:
      - "8080:8080"

  # node service
  node:
    image: node:16
    container_name: lara_node
    working_dir: /var/www/html
    volumes:
      - ${DOCKER_VOLUME_CODES_ROOT_DIR}:/var/www/html
    command: bash -c "npm install && npm run dev"
    ports:
      - "5173:5173"
    networks:
      - laravel


networks:
  laravel:

volumes:
  mysql_data:
