version: '3.8'

services:
  app:
    build:
      context: ../  # Set the context to the parent directory where 'codes' and 'docker' are located
      dockerfile: ./docker/Dockerfile  # Dockerfile path relative to the new context
    container_name: laravel_application
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ../codes:/var/www
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    ports:
      - "8080:80"
      - "8443:443"
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
      - CACHE_DRIVER=redis
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=root
      - DB_PASSWORD=root
    networks:
      - laravel
    depends_on:
      - mysql
      - redis

  # Other services remain unchanged...

  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel
    ports:
      - "3306:3306"

  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  node:
    image: node:16
    container_name: laravel_node
    working_dir: /var/www
    volumes:
      - ../codes:/var/www
    command: bash -c "npm install && npm run dev"
    ports:
      - "5173:5173"
    networks:
      - laravel

networks:
  laravel:

volumes:
  mysql_data: