pipeline {
   agent any

   parameters {
     booleanParam(name: 'RUN_COMPOSER_INSTALL', defaultValue: false, description: 'Run composer install command')
     booleanParam(name: 'RUN_MIGRATION', defaultValue: false, description: 'Run database migration command')
   }

   environment {
     GIT_REPO = 'https://github.com/Md-Ahatasham/dockerized-laravel-application.git'
     GIT_BRANCH = 'feature/deploy-to-jenkins-workspace'
     DOCKER_COMPOSE_FILE = 'docker/docker-compose.yml'
   }

   stages {
       stage('checkout') {
         steps {
           git branch: "${env.GIT_BRANCH}", url: "${env.GIT_REPO}"
         }
       }

       stage('install dependencies & setup') {
         steps {
           script {
               if(params.RUN_COMPOSER_INSTALL) {
                 sh 'composer install'
               }
               if(params.RUN_MIGRATION) {
                sh 'php artisan migrate:fresh'
              }
           }
         }
       }

        stage('build docker image') {
         steps {
           script {
               sh 'docker compose -f ${DOCKER_COMPOSE_FILE} build'
           }
         }
       }

       stage('deploy') {
        steps {
          script {
              sh 'docker compose -f ${DOCKER_COMPOSE_FILE} up -d'
          }
        }
      }
   }

   post {
     always {
       echo 'pipeline has finished executing'
     }
     success {
       echo 'pipeline completed successfully'
     }
     failure {
        echo 'pipeline failed'
      }
   }
}