pipeline {
   agent any

   parameters {
     booleanParam(name: 'RUN_COMPOSER_INSTALL', defaultValue: false, description: 'Run composer install command')
     booleanParam(name: 'RUN_DATABASE_MIGRATION', defaultValue: false, description: 'Run php artisan migrate:fresh command')
     booleanParam(name: 'RUN_DATABASE_SEEDER', defaultValue: false, description: 'Run php artisan db:seed command')
     booleanParam(name: 'RUN_NPM_INSTALL', defaultValue: false, description: 'Run npm install command')
   }

   environment {
     GIT_REPO = 'https://github.com/Md-Ahatasham/dockerized-laravel-application.git'
     GIT_BRANCH = 'feature/deploy-to-remote-server'
     DOCKER_COMPOSE_FILE = 'docker/docker-compose.yml'
     REMOTE_HOST = "sham@192.168.0.103"  // SSH user and remote server (comment outside environment block)
     DOCKER_DIR = "/home/sham/docker-app"   // Path on remote server
   }

   stages {
       stage('checkout') {
         steps {
           git branch: "${env.GIT_BRANCH}", url: "${env.GIT_REPO}"
         }
       }

      stage('Deploy') {
        steps {
          script {
              sshagent(credentials: ['2bdf8258-d184-4911-b3fe-cdb13d15e7d2']) {
                  // Ensure the directory exists on the remote server
                  sh "ssh ${REMOTE_HOST} 'mkdir -p ${DOCKER_DIR}'"

                  // Copy the project files to the remote server, including hidden files
                  sh "scp -r . ${REMOTE_HOST}:${DOCKER_DIR}"

                  // SSH into the remote server and run docker-compose
                  sh "ssh ${REMOTE_HOST} 'cd ${DOCKER_DIR} && docker compose up -d --build'"
              }
          }
        }
      }
   }
}
